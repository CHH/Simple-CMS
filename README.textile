h1. Requirements

# PHP 5.2.6 or newer (PHP 5.3 supported)
# Permissions to modify the @include_path@ of PHP (e.g. via @set_include_path()@)
# Apache 2.2 with mod_rewrite enabled and access to VHOSTs configuration (not tested without, but could also work)
# Make sure you have the Zend Framework either installed through PEAR or somewhere in your PHP @include path@ (copying to the library directory of your Simple CMS Install will also do)

(For Experts: It can also work on other web servers than Apache, although I haven't tested it. Make sure the rewrite rules are configured correctly, look at the rules in public/.htaccess for reference)

h1. How to install

h2. Stable Package

# Get a stable package (simple_cms_vX.X.X) from the @Downloads@ section of Github, these are well tested
# Unzip the contents of the downloaded Package, to a folder in the document root of your web server, for example @/var/www/simple_cms@
# Setup a new VHOST and point its document root to the public directory of the Simple CMS install, for example @/var/www/simple_cms/public@. Don't forget to update your @/etc/hosts@ or @C:\Windows\system32\drivers\etc\hosts@ file with the server name of your VHOST!
# Start your server and open the URL of your VHOST in a Browser -- you should see the Getting Started Page

h2. Developer Package

You can obtain Developer Packages by directly cloning the git repository at @git://github.com/CHH/Simple-CMS.git@ or by taking a snapshot of the repository.

# Get a Developer Package, copy the folder you get from cloning or from unzipping the snapshot, to the document root of your Web Server, for example @/var/www@, you should have a folder @/var/www/Simple-CMS@
# Clone the Spark Web Framework with @git clone git://github.com/yuri41/Spark-Web-Framework@ into for example @/var/www@. Simple CMS will by default look in its parent folder for the Spark Framework checkout
# Proceed with Point Three of the Stable Package install

h1. Usage

h2. Pages

To create a page, simply put a file with the extension ".txt" into the "pages" folder.
If the Root of the Domain (e.g. http://example.com/) gets requested, the page named
"index.txt" gets rendered. 

If you want subpages in the style of "http://example.com/foo/bar" just create
a folder "foo" in the "pages" directory. Then create the file "bar.txt" in the foo
folder. This can be done infinitly, so you can organize your pages as you want.

Pages are formatted with the Textile simple markup Language. You can mix in normal HTML too.

h2. The root folders

The root of your install has various folders
@|-config/@ Surprise! The folder for the config files
@|-pages/@ The folder for all pages. Subdirectories can be created to achieve a hierarchical organization of the pages.
@|-library/@ All kind of classes used by the Simple CMS core
@|-plugins/@ Copy the folders of downloaded plugins in there. Plugins can pretty much do everything, so I don't try to explain it here.
@|-public/@ The public webroot, all files in here are visible by people surfing your site
@  |-images/@
@  |-js/@ Javascript files for your site
@  |-styles/@ A place to put your stylesheets in.
@  |-layouts/@ Contains one or more layouts used by all pages. Layouts are rendered around the page content and are used to render content used on all pages such as Navigation or links to stylesheets.

h1. Advanced Usage

The common Layout for all pages is stored in the layouts folder and is named "default.phtml" by default. This can be changed with the config directive "pages.layout.layout_name".
The path where the layout files are located can be changed with "pages.layout.layout_path".
Both config directives are found in the "pages.ini" config file in the "config" folder.

The layout file uses Zend_View as template engine. To get the content of the requested page, simply output $this->content. Just write your HTML as you normally do, or use 
the Helpers provided by Zend_View.
For additional information refer to the manual of Zend_View.

Because the pages are also parsed with Zend_View, you mix in PHP and use View Helpers
in your Pages too.

h1. Want to contribute?

Simple CMS is licensed under the MIT License, and thus Open Source. 
To contribute fork the git repository at http://github.com/CHH/Simple-CMS and send me pull requests either by mail <christoph.hochstrasser@gmail.com> or submit your pull request via github.

I'm always open for new features and feedback, just send me a mail or a Message on Github and we discuss it.


P.S.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

